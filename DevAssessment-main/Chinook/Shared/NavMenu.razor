@using Chinook.Interfaces
@using Chinook.Models
@using System.Security.Claims
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Chinook</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span>Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            @if (Playlists.Count > 0) 
            { 
                @foreach (var userPlaylist in Playlists)
                {
                    @if (userPlaylist.Playlist != null)
                    {
                        <li class="nav-item">
                            <NavLink class="nav-link" href="@($"playlist/{userPlaylist.PlaylistId}")">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> @userPlaylist.Playlist.Name
                            </NavLink>
                        </li>
                    }
                }
            }
        </div>

    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private List<UserPlaylist> Playlists { get; set; }
    [Inject] IPlaylistService playListService { get; set; }
    private string CurrentUserId;
    [CascadingParameter] private Task<AuthenticationState> authenticationState { get; set; }
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        CurrentUserId = await GetUserId();
        Playlists = await playListService.GetUserPlaylist(CurrentUserId);
    }
    private async Task<string> GetUserId()
    {
        var user = (await authenticationState).User;
        var userId = user.FindFirst(u => u.Type.Contains(ClaimTypes.NameIdentifier))?.Value;
        return userId;
    }
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
